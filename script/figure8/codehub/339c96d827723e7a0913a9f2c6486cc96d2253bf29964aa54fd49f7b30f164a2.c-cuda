// GLOBALS: input0:float32[768, 48, 128] -> output0:float32[48, 48, 128]
// BACKEND: c-cuda (default)
// CONFIG: {"Foutput0:D0": [-1, 1, 2, 2], "Foutput0:D1": [-1, 4, 1, 6], "Foutput0:D2": [-1, 2, 16, 1], "Foutput0:O": [0, 2, 1], "Foutput0:S": 0, "Foutput0:R": 1}
// COMPUTE_V1: - einstein_v2(" output0[N0, N1, N2] = input0[N0 + 672, N1 + 0, N2 + 0] where N0 in 48 , N1 in 48 , N2 in 128; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [768, 48, 128]} })


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[768, 48, 128] -> output0:float32[48, 48, 128]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

__forceinline__ __device__ __half max(const __half a, const __half b) { return a > b ? a : b; }
__forceinline__ __device__ __half min(const __half a, const __half b) { return a < b ? a : b; }

#endif


extern "C" __global__ __launch_bounds__(32) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 12
  // [thread_extent] threadIdx.x = 2
  // [thread_extent] blockIdx.y = 2
  // [thread_extent] threadIdx.y = 1
  // [thread_extent] blockIdx.z = 4
  // [thread_extent] threadIdx.z = 16
  output0[((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4128768))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6144))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4134912))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 16))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4128784))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6160))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4134928))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 128))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4128896))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6272))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135040))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 144))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4128912))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6288))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135056))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 256))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129024))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6400))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135168))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 272))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129040))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6416))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135184))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 384))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129152))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6528))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135296))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 400))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129168))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6544))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135312))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 512))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129280))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6656))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135424))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 528))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129296))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6672))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135440))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 640))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129408))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6784))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135552))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 656))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129424))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6800))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135568))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 768))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129536))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6912))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135680))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 784))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129552))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 6928))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135696))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 896))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129664))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7040))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135808))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 912))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129680))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7056))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135824))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1024))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129792))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7168))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135936))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1040))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129808))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7184))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4135952))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1152))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129920))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7296))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136064))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1168))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4129936))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7312))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136080))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1280))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130048))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7424))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136192))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1296))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130064))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7440))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136208))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1408))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130176))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7552))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136320))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1424))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130192))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7568))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136336))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1536))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130304))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7680))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136448))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1552))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130320))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7696))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136464))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1664))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130432))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7808))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136576))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1680))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130448))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7824))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136592))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1792))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130560))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7936))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136704))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1808))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130576))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 7952))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136720))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1920))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130688))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8064))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136832))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 1936))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130704))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8080))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136848))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2048))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130816))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8192))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136960))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2064))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130832))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8208))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4136976))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2176))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130944))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8320))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137088))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2192))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4130960))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8336))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137104))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2304))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131072))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8448))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137216))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2320))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131088))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8464))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137232))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2432))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131200))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8576))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137344))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2448))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131216))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8592))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137360))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2560))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131328))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8704))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137472))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2576))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131344))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8720))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137488))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2688))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131456))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8832))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137600))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2704))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131472))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8848))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137616))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2816))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131584))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8960))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137728))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2832))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131600))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 8976))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137744))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2944))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131712))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 9088))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137856))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 2960))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4131728))];
  output0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 9104))] = input0[(((((((((int)blockIdx.x) * 24576) + (((int)threadIdx.x) * 12288)) + (((int)blockIdx.y) * 3072)) + (((int)blockIdx.z) * 32)) + ((int)threadIdx.z)) + 4137872))];
}

// Saved Perf = 4.479440e-06 sec / run; Step Produced = 586; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.