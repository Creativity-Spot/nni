// GLOBALS: input0:float32[768], input1:float32[32, 48, 50], input10:float32[32, 48, 50], input11:float32[32, 48, 50], input12:float32[32, 48, 50], input13:float32[32, 48, 50], input14:float32[32, 48, 50], input15:float32[32, 48, 50], input16:float32[32, 48, 50], input17:float32[32, 49, 768], input2:float32[32, 48, 50], input3:float32[32, 48, 50], input4:float32[32, 48, 50], input5:float32[32, 48, 50], input6:float32[32, 48, 50], input7:float32[32, 48, 50], input8:float32[32, 48, 50], input9:float32[32, 48, 50] -> output0:float32[32, 49, 768]
// BACKEND: c-cuda (default)
// CONFIG: {"Foutput0:D0": [-1, 2, 1, 2], "Foutput0:D1": [-1, 1, 7, 1], "Foutput0:D2": [-1, 1, 64, 1], "Foutput0:O": [0, 1, 2], "Foutput0:S": 3, "Foutput0:R": 0}
// COMPUTE_V1: - einstein_v2(" mediate0[N0, N1, N2] = input0[N1] where N0 in 32, N2 in 50;   mediate1[N0, N1, N2] =  input1[N0, N1 - 0, N2].when(N1 < 48,  input2[N0, N1 - 48, N2].when(N1 < 96,  input3[N0, N1 - 96, N2].when(N1 < 144,  input4[N0, N1 - 144, N2].when(N1 < 192,  input5[N0, N1 - 192, N2].when(N1 < 240,  input6[N0, N1 - 240, N2].when(N1 < 288,  input7[N0, N1 - 288, N2].when(N1 < 336,  input8[N0, N1 - 336, N2].when(N1 < 384,  input9[N0, N1 - 384, N2].when(N1 < 432,  input10[N0, N1 - 432, N2].when(N1 < 480,  input11[N0, N1 - 480, N2].when(N1 < 528,  input12[N0, N1 - 528, N2].when(N1 < 576,  input13[N0, N1 - 576, N2].when(N1 < 624,  input14[N0, N1 - 624, N2].when(N1 < 672,  input15[N0, N1 - 672, N2].when(N1 < 720, input16[N0, N1 - 720, N2]) ) ) ) ) ) ) ) ) ) ) ) ) ) )  where N1 in 768;  mediate2[N0, N1, N2] = mediate1[N0, N1, N2] + mediate0[N0, N1, N2];  mediate3[N0, N1, N2] = mediate2[N0 + 0, N1 + 0, N2 + 0] where N0 in 32 , N1 in 768 , N2 in 49; mediate4[N0, N1, N2] = mediate3[N0, N1, N2] * mediate3[N0, N1, N2].call(`normcdf`); mediate5[N0, N2, N1] = mediate4[N0, N1, N2] ;  output0[N0, N1, N2] = input17[N0, N1, N2] + mediate5[N0, N1, N2]; ", input_dict={ "input0" : { "dtype" : "float32", "shape" : [768]} ,  "input1" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input2" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input3" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input4" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input5" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input6" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input7" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input8" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input9" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input10" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input11" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input12" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input13" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input14" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input15" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input16" : { "dtype" : "float32", "shape" : [32, 48, 50]} ,  "input17" : { "dtype" : "float32", "shape" : [32, 49, 768]} }) ## @:  memcpy


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float32[768], input1:float32[32, 48, 50], input10:float32[32, 48, 50], input11:float32[32, 48, 50], input12:float32[32, 48, 50], input13:float32[32, 48, 50], input14:float32[32, 48, 50], input15:float32[32, 48, 50], input16:float32[32, 48, 50], input17:float32[32, 49, 768], input2:float32[32, 48, 50], input3:float32[32, 48, 50], input4:float32[32, 48, 50], input5:float32[32, 48, 50], input6:float32[32, 48, 50], input7:float32[32, 48, 50], input8:float32[32, 48, 50], input9:float32[32, 48, 50] -> output0:float32[32, 49, 768]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#define __ITEM_0_OF__(v) (v).x
#define __ITEM_1_OF__(v) (v).y
#define __ITEM_2_OF__(v) (v).z
#define __ITEM_3_OF__(v) (v).w

#define __STORE_ITEM_0__(t, out, ido, in, idi) *(t*)(out + ido) = *(t*)(in + idi)
#define __STORE_ITEM_1__(t, out, ido, in, idi)
#define __STORE_ITEM_2__(t, out, ido, in, idi)
#define __STORE_ITEM_3__(t, out, ido, in, idi)

#define MAKE_VEC4_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y, l.z + r.z, l.w + r.w); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y, l.z - r.z, l.w - r.w); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y, l.z * r.z, l.w * r.w); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y, l.z / r.z, l.w / r.w); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y, l.z % r.z, l.w % r.w); }
#define MAKE_VEC2_OP(type) \
  __forceinline__ __device__ type operator+(const type &l, const type &r) { return make_##type(l.x + r.x, l.y + r.y); } \
  __forceinline__ __device__ type operator-(const type &l, const type &r) { return make_##type(l.x - r.x, l.y - r.y); } \
  __forceinline__ __device__ type operator*(const type &l, const type &r) { return make_##type(l.x * r.x, l.y * r.y); } \
  __forceinline__ __device__ type operator/(const type &l, const type &r) { return make_##type(l.x / r.x, l.y / r.y); } \
  __forceinline__ __device__ type operator%(const type &l, const type &r) { return make_##type(l.x % r.x, l.y % r.y); }

MAKE_VEC4_OP(int4)
MAKE_VEC2_OP(int2)

__forceinline__ __device__ __half max(const __half a, const __half b) { return a > b ? a : b; }
__forceinline__ __device__ __half min(const __half a, const __half b) { return a < b ? a : b; }

#endif


extern "C" __global__ __launch_bounds__(448) void template_op_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ input10, float* __restrict__ input11, float* __restrict__ input12, float* __restrict__ input13, float* __restrict__ input14, float* __restrict__ input15, float* __restrict__ input16, float* __restrict__ input17, float* __restrict__ input2, float* __restrict__ input3, float* __restrict__ input4, float* __restrict__ input5, float* __restrict__ input6, float* __restrict__ input7, float* __restrict__ input8, float* __restrict__ input9, float* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 8
  // [thread_extent] threadIdx.x = 1
  // [thread_extent] blockIdx.y = 7
  // [thread_extent] threadIdx.y = 7
  // [thread_extent] blockIdx.z = 12
  // [thread_extent] threadIdx.z = 64
  output0[((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)))] = (input17[((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)))] + ((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 33600))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 36000))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) * normcdf((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 33600))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 36000))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]))));
  output0[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 37632))] = (input17[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 37632))] + ((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 33600))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) * normcdf((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 33600))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]))));
  output0[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 75264))] = (input17[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 75264))] + ((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) * normcdf((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 31200))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]))));
  output0[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 112896))] = (input17[(((((((((int)blockIdx.x) * 150528) + (((int)blockIdx.y) * 5376)) + (((int)threadIdx.y) * 768)) + (((int)blockIdx.z) * 64)) + ((int)threadIdx.z)) + 112896))] + ((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]) * normcdf((((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 48) ? input1[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 96) ? input2[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 144) ? input3[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) + 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 192) ? input4[((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 240) ? input5[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 2400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 288) ? input6[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 4800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 336) ? input7[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 7200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 384) ? input8[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 9600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 432) ? input9[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 12000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 480) ? input10[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 14400))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 528) ? input11[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 16800))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 576) ? input12[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 19200))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 624) ? input13[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 21600))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 672) ? input14[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 24000))] : ((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) < 720) ? input15[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 26400))] : input16[(((((((((int)blockIdx.x) * 9600) + (((int)blockIdx.z) * 3200)) + (((int)threadIdx.z) * 50)) + (((int)blockIdx.y) * 7)) + ((int)threadIdx.y)) - 28800))]))))))))))))))) + input0[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]))));
}

// Saved Perf = 3.064870e-05 sec / run; Step Produced = 380; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.